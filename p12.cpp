/*



The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?
*/

#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

typedef unsigned long long int ull;

int main()
{
  ull numDivisors = 0, triNum, n = 1;

  // O( m*sqrt(n))
  while(numDivisors < 500)
  {
    //reset numDivisors
    numDivisors = 0;

    //triangular number formula = (n*(n+1))/2
    triNum = (n*(n + 1))/2;
    cout << endl << "TRI: " << triNum << endl;

    //find the divisors
    for(ull i = 1; i <= sqrt(triNum) + 1; i++)
    {
      if(triNum % i == 0)
      {
        if(triNum/i == i)
        {
          numDivisors++;
        }
        else
        {
          numDivisors+=2;
        }
      }
    }
    cout << "DIV: " << numDivisors << endl;
    //incremet the triangle
    n++;
  }

  cout << endl << triNum << endl;

  return 0;
}
