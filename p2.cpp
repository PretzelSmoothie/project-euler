/*
Euler P2: Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do
not exceed four million, find the sum of the even-valued terms.
*/


#include <iostream>

using std::cout;
using std::endl;


int main(){
  int x = 1, y = 2, z, sum = 0;

  do {
    z = x + y;
    x = y;
    y = z;
    if( y % 2 == 0 )
      sum += y;
  } while (y <= 4000000);

  cout << endl << endl
       << "Sum of even-valued terms: " << sum
       << endl << endl;
  return 0;
}

int fibn(int n){
  if( n <= 0 )
    return 0;
  else if ( n == 1 )
    return 1;
  else
    return fibn(n - 1) + fibn(n - 2);
}
